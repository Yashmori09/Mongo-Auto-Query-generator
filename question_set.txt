Q1: Find all the customers who have an active account.

A1: db.customers.find({active: true})

Q2: Find all the customers who have a tier level of 'Gold'.

A2: db.customers.find({"tier_and_details.tier": "Gold"})

Q3: Find the total number of transactions made by each customer.

A3: db.transactions.aggregate([
     {$group: {_id: "$account_id", total_transactions: {$sum: 1}}}
   ])

Q4: Find the customers who have made transactions within a specific date range.

A4: db.customers.aggregate([
     {$lookup: {
         from: "transactions",
         localField: "_id",
         foreignField: "account_id",
         as: "customer_transactions"
     }},
     {$match: {"customer_transactions.date": {$gte: ISODate("2022-01-01"), $lte: ISODate("2022-12-31")}}}
   ])

Q5: Find the customers who have made transactions with a specific transaction code.

A5: db.customers.aggregate([
     {$lookup: {
         from: "transactions",
         localField: "_id",
         foreignField: "account_id",
         as: "customer_transactions"
     }},
     {$match: {"customer_transactions.transaction_code": "XYZ"}}
   ])

Q6: Find the customers who have made transactions with a specific symbol.

A6: db.customers.aggregate([
     {$lookup: {
         from: "transactions",
         localField: "_id",
         foreignField: "account_id",
         as: "customer_transactions"
     }},
     {$match: {"customer_transactions.symbol": "ABC"}}
   ])

Q7: Find the customers who have made transactions with a specific price range.

A7: db.customers.aggregate([
     {$lookup: {
         from: "transactions",
         localField: "_id",
         foreignField: "account_id",
         as: "customer_transactions"
     }},
     {$match: {"customer_transactions.price": {$gte: "10", $lte: "100"}}}
   ])

Q8: Find the customers who have made transactions with a specific total amount range.

A8: db.customers.aggregate([
     {$lookup: {
         from: "transactions",
         localField: "_id",
         foreignField: "account_id",
         as: "customer_transactions"
     }},
     {$match: {"customer_transactions.total": {$gte: "100", $lte: "1000"}}}
   ])

Q9: Find the customers who have an account with a specific limit.

A9: db.customers.find({"accounts.limit": 5000})

Q10: Find the customers who have an account with a specific product.

A10: db.customers.find({"accounts.products": "Product A"})

Q11: Find the customers who have an account with a specific product and limit.

A11: db.customers.find({"accounts.products": "Product A", "accounts.limit": 5000})

Q12: Find the customers who have an account with a specific product and active status.

A12: db.customers.find({"accounts.products": "Product A", "active": true})

Q13: Find the customers who have an account with a specific product, limit, and active status.

A13: db.customers.find({"accounts.products": "Product A", "accounts.limit": 5000, "active": true})

Q14: Find the customers who have an account with a specific product and were born after a specific date.

A14: db.customers.find({"accounts.products": "Product A", "birthdate": {$gt: ISODate("1990-01-01")}})

Q15: Find the customers who have an account with a specific product and have a tier level of 'Silver'.

A15: db.customers.find({"accounts.products": "Product A", "tier_and_details.tier": "Silver"})

Q16: Find the customers who have an account with a specific product and have a tier level of 'Silver' or 'Gold'.

A16: db.customers.find({"accounts.products": "Product A", "tier_and_details.tier": {$in: ["Silver", "Gold"]}})

Q17: Find the customers who have an account with a specific product and have a tier level of 'Silver' or 'Gold', and were born before a specific date.

A17: db.customers.find({"accounts.products": "Product A", "tier_and_details.tier": {$in: ["Silver", "Gold"]}, "birthdate": {$lt: ISODate("1990-01-01")}})

Q18: Find the customers who have an account with a specific product and have a tier level of 'Silver' or 'Gold', and have made transactions within a specific date range.

A18: db.customers.aggregate([
     {$lookup: {
         from: "transactions",
         localField: "_id",
         foreignField: "account_id",
         as: "customer_transactions"
     }},
     {$match: {"accounts.products": "Product A", "tier_and_details.tier": {$in: ["Silver", "Gold"]}, "customer_transactions.date": {$gte: ISODate("2022-01-01"), $lte: ISODate("2022-12-31")}}}
   ])

Q19: Find the customers who have an account with a specific product and have a tier level of 'Silver' or 'Gold', and have made transactions with a specific transaction code.

A19: db.customers.aggregate([
     {$lookup: {
         from: "transactions",
         localField: "_id",
         foreignField: "account_id",
         as: "customer_transactions"
     }},
     {$match: {"accounts.products": "Product A", "tier_and_details.tier": {$in: ["Silver", "Gold"]}, "customer_transactions.transaction_code": "XYZ"}}
   ])

Q20: Find the customers who have an account with a specific product and have a tier level of 'Silver' or 'Gold', and have made transactions with a specific symbol.

A20: db.customers.aggregate([
     {$lookup: {
         from: "transactions",
         localField: "_id",
         foreignField: "account_id",
         as: "customer_transactions"
     }},
     {$match: {"accounts.products": "Product A", "tier_and_details.tier": {$in: ["Silver", "Gold"]}, "customer_transactions.symbol": "ABC"}}
   ])